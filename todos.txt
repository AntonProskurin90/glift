Done - Replace stone bbox with button.
Done - 'stone model' to be intersection based
Done - add star point object
Done - add lines object
Done - Add marks.
Done - Add a key-stroke mapping
Done - Support displaying variations (movetree)
Done - Add base widget
Done - Add stone hovering to the base widget
Done - Add default icon-actions to base widget
Done - Remove argument guarding code.
Done - Getting to the end of a Game causes problems for some reason.
Done - Create option for glift to always show variations (useful for problems)
Done - Change public createBlah(...) to just blah(...)
Done - For problems, support retrying.  This implies storing the old problem
  separately from what's currently being used.
Done - Change the form of the fullBoardData should be of the form:
Done! - Add more efficient next/prev move
    (a.k.a) - Make the adding/removing stones smarter / more efficient.
Done - Add 'explain' support for problems.
Done - Make SGF Parsing Faster, and support KOGOS
Done - Add theme option for how variation numbers should be displayed (i.e., the
  color);
Done - Supply a field as part of the boardData that says whether the data is
  partial or not.  Then the methods could just be 'applyDisplayData' -- much
  easier to use, and less error prone
Done - Support pass.  Currently the parsers barf on B[] and W[]
Done - Make sure viewing KOGOs works (yikes) -> depends on adding Pass support
Done - Speed up clicking on tablets.
Done - Fix the text selection issue
Done(ish) - Change variation coloring so that it colors existing marks, rather than
  overwriting them. (still need to support shape-marks).
Done - Add 'right/wrong' indicators for problems

Nope:
  Info Window / panel.
    Rationale: Creating an 'Info' div / graph / data, whatever, is the job of the
    user of this library.  It's purpose is orthogonal to this library
  Add generic options parsing.
    Rationale: This is too heavy weight.  I've found that the simple options
    parsing logic more maintainable and easier to understand.

Smaller Changes.
- Add support for numbering on the edges, beyond the lines. (Not sure if this is necessary)
- Add tests for widgets.
- Add tests for marks.
- Finish key-stroke mappings -- add more keys, support two go boards on same
  screen.
- Add movetree->SGF transformation
- Add shadow (perhaps even border) to comment box.
- Make it possible to change the width of the go board border.
- Borders seem to not be included as part of 'width', so lining up the comment
  box has problems when the go board does/doesn't have a line-border
  see: http://stackoverflow.com/questions/7401369/why-is-svg-stroke-width-1-making-lines-transparent
- IconBars --> Do they need a background?  Probably yes.
- Ko support (less important?)
- Add the ability to create static images (i.e., canvas support)
- Change Goban addStone capture to return consistent capture object with
  loadStonesFromMovetree.
- BUG: NextMove fails when the next move is a pass.
- Change Marks to optionally take a color-theme-cateory.  Not sure what this should be called
- Make a 'settings' overlay.
- Add Pass Button to GameViewer (base) widget.
- Make orientation of GoBoard (widget?) configurable (flush left, center-h, flush-right, etc).
- Change MoveNodes / Movetree to have parent information instead of movehistory.
- Make a global registry of 'active board' so that key events can be assigned.
- Remove dependencies on external libraries!  Quite a big job.


Problem Widget
- Make Comments toggle-able (should be part of settings)
- Change viewer to color the right variations differently

- Create game editor widget. (many dependencies)
  - add moveTree support for delete
  - support vertically centered icons (editor).  ( I
  - Add icons for game editor.
  - Add a game editor

Some ideas for future development:
2. Make the base configuration changes orientations based on screen dimensions.
See the KGS window for an example of this.
