Done - Replace stone bbox with button.
Done - 'stone model' to be intersection based
Done - add star point object
Done - add lines object
Done - Add marks.
Done - Add a key-stroke mapping
Done - Support displaying variations (movetree)
Done - Add base widget
Done - Add stone hovering to the base widget
Done - Add default icon-actions to base widget
Done - Remove argument guarding code.
Done - Getting to the end of a Game causes problems for some reason.
Done - Create option for glift to always show variations (useful for problems)
Done - Change public createBlah(...) to just blah(...)
Done - For problems, support retrying.  This implies storing the old problem
  separately from what's currently being used.
Done - Change the form of the fullBoardData should be of the form:
Done! - Add more efficient next/prev move
    (a.k.a) - Make the adding/removing stones smarter / more efficient.
Done - Add 'explain' support for problems.
Done - Make SGF Parsing Faster, and support KOGOS
Done - Add theme option for how variation numbers should be displayed (i.e., the
  color);
Done - Supply a field as part of the boardData that says whether the data is
  partial or not.  Then the methods could just be 'applyDisplayData' -- much
  easier to use, and less error prone
Done - Support pass.  Currently the parsers barf on B[] and W[]
Done - Make sure viewing KOGOs works (yikes) -> depends on adding Pass support
Done - Speed up clicking on tablets.
Done - Fix the text selection issue
Done(ish) - Change variation coloring so that it colors existing marks, rather than
  overwriting them. (still need to support shape-marks).
Done - Add 'right/wrong' indicators for problems
Done - BUG: NextMove fails when the next move is a pass.
Done - Change font size to based on pixel size.
Done - Change viewer to color the right variations differently.  This is a bit
  hacky and will probably need to be redone.
Done - Make Comments toggle-able (should be part of settings window ultimately)
Done - Change the Text Width dynamically (I think this is done.
Done - Make Problem correctness configurable.
Done - Add tests for widgets.
Done - Borders seem to not be included as part of 'width', so lining up the comment
  box has problems when the go board does/doesn't have a line-border see:
  http://stackoverflow.com/questions/7401369/why-is-svg-stroke-width-1-making-lines-transparent
  Note -- This was solved by positioning the widget correctly.
Done - Make orientation of GoBoard (widget?) configurable (flush left, center-h, flush-right, etc).
  Note -- This has only been done for alignment to the TOP, CENTER, and RIGHT,
  but it's easy to add more alignments if necessary
Done - On skinny windows, move the icon bar so it's flush with the window (a sort of flush-top)
Done - Make the base configuration changes orientations based on screen
dimensions.  See the KGS/cgoban window for a great example of this.
Done - Remove dependency on D3!
Done - Write my own SVG library
Done - Add a way to disable current move marking
Done - Add icon selector
Done - Support vertically centered icons. Note: this is part of the selector.

Nope:
  Info Window / panel.
    Rationale: Creating an 'Info' div / graph / data, whatever, is the job of the
    user of this library.  It's purpose is orthogonal to this library
  Add generic options parsing.
    Rationale: This is too heavy weight.  I've found that the simple options
    parsing logic to be more maintainable and easier to understand.
  Create a problem explorer widget / controller.
    Rationale: Too similar to the game viewer -- turned out not to be necessary.

Open Questions:
- IconBars --> Do they need a background?
- Ko support (less important?)
- Make a 'settings' overlay.

Todos:
- Add support for numbering on the edges, beyond the lines.
- Add tests for marks.
- Add shadow (perhaps even border) to comment box.
- Make it possible to change the width of the go board border.
- Add the ability to create static images (i.e., canvas support)
- Change Goban addStone capture to return consistent capture object with
  loadStonesFromMovetree.
- Change Marks to optionally take a color-theme-cateory.  Not sure what this should be called
- Add Pass Button to GameViewer (base) widget.
- Change MoveNodes / Movetree to have parent information instead of movehistory.
- Make a global registry of 'active board' so that key events can be assigned.
- Get the theme data out of the display.
- Finish key-stroke mappings -- add more keys, support two go boards on same
  screen (probably via a key-registry)
- Add move slider
- Add title bar
- Support AE (clear intersection)
- Support PL (changes who plays first)
- Support export for different types
- Add a way to specify next-moves, so that auto-numbering can be used for
  EXAMPLE diagrams.
- Make a distinction between integer points and float points.  We can cache
  integer points, but we shouldn't cache float points.
- Combine the selector and bar by putting everything in bar in an abstract
  class.
- Escaping character '\' in the context of \] is leaking into the comments and
  needs to be removed.
- Default in sgfDefaults kfor showVariations doesn't work.

- Create game editor widget. (many dependencies)
  - Add movetree->SGF transformation
  - Add moveTree support for deleting properties
  - Add moveTree support for deleting variations
  - Add icons for game editor
