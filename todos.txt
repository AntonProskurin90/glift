Done - Replace stone bbox with button.
Done - 'stone model' to be intersection based
Done - add star point object
Done - add lines object
Done - Add marks.
Done - Add a key-stroke mapping
Done - Support displaying variations (movetree)
Done - Add base widget
Done - Add stone hovering to the base widget

Smaller Changes.
- Add generic options parsing. (I'm not sure this is necessary)
- Add tests for widgets.
- Add tests for marks.
- Remove argument guarding code.
- Change public createBlah(...) to just blah(...)
- BUG: Getting to the end of a Game causes problems for some reason.
- Add intersections on the edges. (is this necessary?)
- Finish key-stroke mappings (add more keys)
- Add movetree->SGF transformation
- Make the comment box prettier. (actionable?)
- add moveTree support for delete
- support vert centered icons (editor).
- Make the adding/removing stones smarter / more efficient.
- Change variation coloring so that it colors existing marks, rather than
  overwriting them.
- Create game editor.
- Create option for glift to always show variations (useful for problems)
- Add theme option for how variation numbers should be displayed (i.e., the
  color);
- Make it possible to change the width of the go border
- Add auto-cropping ability (useful for problems)

- Support pass


Some ideas for future development:
2. Make the base configuration totally resizeable.  This is a relatively
difficult problem I'm not sure what the best way to approach it is.  Probably I
will create a wrapper abstraction that automatically changes the dimensions of
the boxes, since everything is absolutely positioned.  How does the real world
solve this problem?
  - Auto-resizes.
  - Changes orientations based on screen dimensions.  See the KGS window.

3. Really make the Problem series work the way I want!

4. Make a Problem Reviewer Widget.  Perhaps, generally, make an Info panel box.
