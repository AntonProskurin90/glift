parse/sgf_parser.js:57: ERROR - Function glift.rules.movetree.getInstance: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
  var movetree = glift.rules.movetree.getInstance();
                 ^

parse/tygem.js:18: ERROR - Function glift.rules.movetree.getInstance: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
  var movetree = glift.rules.movetree.getInstance();
                 ^

parse/tygem.js:58: ERROR - Function parseInt: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      var x = parseInt(splat[4]);
              ^

parse/tygem.js:59: ERROR - Function parseInt: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      var y = parseInt(splat[5]);
              ^

rules/goban.js:46: ERROR - Function glift.rules.MoveTree.prototype.getTreeFromRoot: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
        movetree = mt.getTreeFromRoot(),
                   ^

rules/goban.js:89: ERROR - assignment to property stones of glift.rules.Goban
found   : (Array<glift.enums.states<string>>|null)
required: Array<glift.enums.states<string>>
  this.stones = glift.rules.initStones_(ints);
  ^

rules/goban.js:206: ERROR - Function glift.rules.Goban.prototype.placeable: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
    if (this.outBounds(pt) || !this.placeable(pt))
                               ^

rules/goban.js:207: ERROR - Function glift.rules.StoneResult: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return new glift.rules.StoneResult(false);
             ^

rules/goban.js:226: ERROR - Function glift.rules.StoneResult: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
        return new glift.rules.StoneResult(false);
               ^

rules/goban.js:334: ERROR - actual parameter 2 of glift.rules.Goban.prototype.addStone does not match formal parameter
found   : string
required: glift.enums.states<string>
        this.addStone(captures[color][i], color);
                                          ^

rules/movenode.js:14: ERROR - Function glift.rules.properties: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
  this._properties = properties || glift.rules.properties();
                                   ^

rules/movenode.js:69: ERROR - Function glift.rules.properties: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
      glift.rules.properties(),
      ^

rules/movetree.js:38: ERROR - Function glift.rules.MoveTree: called with 1 argument(s). Function requires at least 3 argument(s) and no more than 3 argument(s).
    var mt = new glift.rules.MoveTree(glift.rules.movenode());
             ^

rules/movetree.js:38: ERROR - Function glift.rules.movenode: called with 0 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
    var mt = new glift.rules.MoveTree(glift.rules.movenode());
                                      ^

rules/movetree.js:303: ERROR - Function glift.rules.MoveTree.prototype.getTreeFromRoot: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    var mt = this.getTreeFromRoot(),
             ^

rules/movetree.js:306: ERROR - Function parseInt: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      var ints = parseInt(mt.properties().getAllValues(allProperties.SZ));
                 ^

rules/movetree.js:378: ERROR - Function glift.rules.MoveTree.prototype.getTreeFromRoot: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
      var mt = this.getTreeFromRoot();
               ^

rules/movetree.js:396: ERROR - Function glift.rules.MoveTree.prototype.getTreeFromRoot: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    var oldMt = this.getTreeFromRoot();
                ^

rules/movetree.js:399: ERROR - Function glift.rules.movetree.getInstance: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    var mt = glift.rules.movetree.getInstance();
             ^

rules/movetree.js:451: ERROR - Function glift.rules.MoveTree.prototype.getTreeFromRoot: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    glift.rules.movetree.searchMoveTreeDFS(this.getTreeFromRoot(), func);
                                           ^

rules/movetree.js:456: ERROR - Function glift.rules.MoveTree.prototype.getTreeFromRoot: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    return this._toSgfBuffer(this.getTreeFromRoot().node(), []).join("");
                             ^

rules/movetree.js:481: ERROR - Function glift.rules.MoveTree.prototype.getTreeFromRoot: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    var mt = this.getTreeFromRoot(),
             ^

rules/properties.js:314: ERROR - Function glift.rules.Properties.prototype.getOneValue: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return this.getOneValue('C');
             ^

rules/properties.js:337: ERROR - Function glift.rules.Properties.prototype.getOneValue: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      if (this.getOneValue('B') === "") {
          ^

rules/properties.js:340: ERROR - Function glift.rules.Properties.prototype.getAsPoint: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
        return { color: BLACK, point: this.getAsPoint('B') }
                                      ^

rules/properties.js:343: ERROR - Function glift.rules.Properties.prototype.getOneValue: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      if (this.getOneValue('W') === "") {
          ^

rules/properties.js:346: ERROR - Function glift.rules.Properties.prototype.getAsPoint: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
        return { color: WHITE, point: this.getAsPoint('W') };
                                      ^

rules/properties.js:536: ERROR - Function glift.rules.Properties.prototype.getOneValue: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
          value: this.getOneValue(key)
                 ^

rules/properties.js:541: ERROR - Function glift.rules.Properties.prototype.getOneValue: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
          obj.value += ' [' + this.getOneValue('WR') + ']';
                              ^

rules/properties.js:543: ERROR - Function glift.rules.Properties.prototype.getOneValue: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
          obj.value += ' [' + this.getOneValue('BR') + ']';
                              ^

rules/properties.js:547: ERROR - Function glift.rules.Properties.prototype.getOneValue: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
          obj.value = parseFloat(this.getOneValue(key)) + '' || '0';
                                 ^

rules/treepath.js:74: ERROR - inconsistent return type
found   : (Array<number>|null|number|string)
required: Array<number>
      return initPos;
             ^

rules/treepath.js:95: ERROR - Function parseInt: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      var firstNum = parseInt(v[0])
                     ^

rules/treepath.js:117: ERROR - Function parseInt: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
          out.push(parseInt(testNum));
                   ^

rules/treepath.js:122: ERROR - Function parseInt: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
          out.push(parseInt(testNum));
                   ^

rules/treepath.js:144: ERROR - inconsistent return type
found   : (Array<number>|string)
required: Array<number>
      return pathStr; // assume the array is in the correct format
             ^

rules/treepath.js:156: ERROR - Function parseInt: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
        out.push(parseInt(num))
                 ^

rules/treepath.js:159: ERROR - Function parseInt: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
        out.push(parseInt(num));
                 ^

rules/treepath.js:395: ERROR - Function glift.rules.MoveTree.prototype.moveUp: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      movetree.moveUp(i)
      ^

util/performance.js:32: ERROR - Property first never defined on glift.global.perf
  var first = glift.global.perf.first;
                                ^

widgets/base_widget.js:368: ERROR - Property keyHandlerFunc never defined on glift.widgets.BaseWidget
    if (this.keyHandlerFunc !== undefined) {
             ^

widgets/base_widget.js:372: ERROR - Cannot add a property to a struct instance after it is constructed.
    this.keyHandlerFunc = undefined;
         ^

widgets/base_widget.js:372: ERROR - Property keyHandlerFunc never defined on glift.widgets.BaseWidget
    this.keyHandlerFunc = undefined;
         ^

widgets/manager.js:142: ERROR - Property temporaryWidget never defined on glift.widgets.WidgetManager
    if (this.temporaryWidget) {
             ^

widgets/manager.js:276: ERROR - Cannot add a property to a struct instance after it is constructed.
    this.temporaryWidget = this.createWidget(sgfObj).draw();
         ^

widgets/manager.js:276: ERROR - Property temporaryWidget never defined on glift.widgets.WidgetManager
    this.temporaryWidget = this.createWidget(sgfObj).draw();
         ^

widgets/manager.js:280: ERROR - Property temporaryWidget never defined on glift.widgets.WidgetManager
    this.temporaryWidget && this.temporaryWidget.destroy();
         ^

widgets/manager.js:281: ERROR - Cannot add a property to a struct instance after it is constructed.
    this.temporaryWidget = undefined;
         ^

widgets/manager.js:361: ERROR - Property temporaryWidget never defined on glift.widgets.WidgetManager
    this.temporaryWidget && this.temporaryWidget.destroy();
         ^

widgets/manager.js:362: ERROR - Cannot add a property to a struct instance after it is constructed.
    this.temporaryWidget = undefined;
         ^

50 error(s), 0 warning(s), 74.7% typed
